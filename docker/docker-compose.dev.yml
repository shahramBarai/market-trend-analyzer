version: '3'

services:
  # ------ Quarto for report generation ------- #
  quarto:
    image: quarto
    build:
      context: ../report
      dockerfile: Dockerfile
    ports:
      - '127.0.0.1:4200:4200'
    volumes:
      - ../report/bibliography.bib:/report/bibliography.bib
      - ../report/index.qmd:/report/index.qmd
      - ../report/header.tex:/report/header.tex
      - ../report/images:/report/images
    profiles:
        - report

  # ------ Kafka ------- #
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    hostname: kafka
    ports:
      - '9092:9092'
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - ./configs/kafka:/configs

  # ------ Kafka UI ------- #
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - '8080:8080'
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka

  # ------ Flink Job Manager ------- #
  flink-jobmanager:
    image: flink:latest
    container_name: flink-jobmanager
    command: jobmanager
    ports:
      - '8081:8081'  # Flink Web UI
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
    volumes:
      - ../build:/opt/flink/usrlib
    depends_on:
      - kafka
    

  # ------ Flink Task Manager ------- #
  flink-taskmanager:
    image: flink:latest
    command: taskmanager
    deploy:
      replicas: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: flink-jobmanager
        taskmanager.numberOfTaskSlots: 8
    volumes:
      - ../build:/opt/flink/usrlib
    depends_on:
      - flink-jobmanager

  # ------ Producer ------- #
  producer:
    container_name: producer
    build:
      context: ..
      dockerfile: ./docker/dockerfiles/producer/Dockerfile
    environment:
      - KAFKA_BROKERS=kafka:9092
    volumes:
      - type: bind
        source: ../services/producer/data
        target: /data
        bind:
          propagation: shared
    depends_on:
      - kafka

  # ------ Web App ------- #
  webapp:
    container_name: webapp
    build:
      context: ..
      dockerfile: ./docker/dockerfiles/webapp/Dockerfile
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPICS=FR-tick,FR-ema,FR-advisories,NL-tick,NL-ema,NL-advisories,ETR-tick,ETR-ema,ETR-advisories
      - KAFKA_GROUP_ID=webapp
    restart: "no"
    volumes:
      - ../services/webapp:/app
      - ../shared:/shared
    ports:
      - 3000:3000
    depends_on:
      - kafka